{
	"info": {
		"_postman_id": "36577113-e6ed-4ecd-aef7-10678cee4008",
		"name": "Chat Backend",
		"description": "This collection shows each endpoint in the API, their expected bodies or parameters and URLs to reach them.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Berke\",\n    \"lastName\": \"Ucvet\",\n    \"username\": \"b3vet\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/users",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						},
						"description": "Post request to /users\n\nExpects:\n\nfirstName: string,\n\nlastName: string,\n\nusername: string\n\nReturns:\n\nCreated user object"
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/users",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						},
						"description": "Get request to /users\n\nReturns:\n\nArray of user objects"
					},
					"response": []
				},
				{
					"name": "Get User Details By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/users/1",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"1"
							]
						},
						"description": "Get request to /users/{{userId}}\n\nExpects:\n\nuserId: int (in the url)\n\nReturns:\n\nUser object with the given id\n\nThrows: UserNotFoundException"
					},
					"response": []
				}
			],
			"description": "User related action endpoints."
		},
		{
			"name": "Message",
			"item": [
				{
					"name": "List All Messages",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/messages",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"messages"
							]
						},
						"description": "Get request to /messages\n\nReturns:\n\nArray of message objects"
					},
					"response": []
				},
				{
					"name": "Send Message",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"Hey! Hello there. This is my second chat in this app!\",\n    \"to\": 3,\n    \"from\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/messages",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"messages"
							]
						},
						"description": "Post request to /messages\n\nExpects:\n\ntext: string,\n\nto: int,\n\nfrom: int\n\nReturns:\n\nCreated message object\n\nThrows:\n\nUserNotFoundException\n\n\"to\" and \"from\" values are user ids. This endpoint checks if a chat exists between given users, if so, creates the message and relates the message with the found chat, else, creates a new chat between given users, creates the message and relates the message with the created chat."
					},
					"response": []
				},
				{
					"name": "Get Messages of Chat By Chat ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/messages/1",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"messages",
								"1"
							]
						},
						"description": "Get request to /messages/{{chatId}}\n\nExpects:\n\nchatId: int (in the url)\n\nReturns:\n\nArray of messages of given chat\n\nThrows:\n\nChatNotFoundException"
					},
					"response": []
				},
				{
					"name": "Messages to User By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/messages/to-user/2",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"messages",
								"to-user",
								"2"
							]
						},
						"description": "Get request to /messages/to-user/{{userId}}\n\nExpects:\n\nuserId: int (in the url)\n\nReturns:\n\nArray of messages that are sent to the given user\n\nThrows:\n\nUserNotFoundException"
					},
					"response": []
				},
				{
					"name": "Delete Message",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/messages/3",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"messages",
								"3"
							]
						},
						"description": "Delete request to /messages/{{messageId}}\n\nExpects:\n\nmessageId: int (in the url)\n\nReturns:\n\nnull\n\nThrows:\n\nMessageNotFoundException"
					},
					"response": []
				}
			],
			"description": "Message related action endpoints."
		},
		{
			"name": "Chat",
			"item": [
				{
					"name": "List All Chats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/chats",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"chats"
							]
						},
						"description": "Get request to /chats\n\nReturns:\n\nArray of chat objects"
					},
					"response": []
				},
				{
					"name": "List Chats By User ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/chats/user/1",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"chats",
								"user",
								"1"
							]
						},
						"description": "Get request to /chats/user/{{userId}}\n\nExpects:\n\nuserId: int (in the url)\n\nReturns:\n\nArray of chat objects and messages inside them, that are related to the given user.\n\nThrows:\n\nUserNotFoundException"
					},
					"response": []
				},
				{
					"name": "Delete Chat",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/chats/2",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"chats",
								"2"
							]
						},
						"description": "Delete request to /chats/{{chatId}}\n\nExpects:\n\nchatId: int (in the url)\n\nReturns:\n\nnull\n\nThrows:\n\nChatNotFoundException"
					},
					"response": []
				}
			],
			"description": "Chat related endpoints."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "port",
			"value": "8080",
			"type": "string"
		},
		{
			"key": "host",
			"value": "http://localhost",
			"type": "string"
		}
	]
}